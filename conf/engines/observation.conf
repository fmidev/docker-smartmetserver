quiet = false;
dbRegistryFolderPath = "observation/db_registry";
serializedStationsFile = "/var/smartmet/observation/stations.txt";

cacheDB = "spatialite";
# cacheDB = "postgresql";         // postgresql | spatialite
# dbDriverFile = "/usr/lib64/libsmartmet-delfoi.so";

observationCacheId = "spatialite";
spatialiteFile = "/var/smartmet/observation/stations.sqlite";

data_quality_filter:
{
        default_filter = "le 5";

        override:
        {
                // fmi = "ge 1 AND le 4";
                // opendata = "le 10";
        };
};

@include "observation/database_info.conf"

# database_driver_info is a list of database drivers
#
# name - Name of database driver.
# tables - List of tables that are read by the driver
# caches - List of caches that are handled by the driver. Each cache item is of format 'cache name: list of cache tables'
# active - If true driver is created, if false driver is not created
#
# Cache examples:
#
# caches = [""]; // No cache used
# caches = ["spatialite_common_cache:observation_data,weather_data_qc,flash_data"]; // All tables in the same cache
# caches = ["spatialite_weather_data_qc_cache:weather_data_qc","spatialite_flash_cache:flash_data","spatialite_observation_cache:observation_data"]; // Each table in its own cache file
#

database_driver_info:
(
    { // Observation within first 28 days are fetched from replica database (or cache)
        name = "postgresql_replica_fmi_observations";
        tables = ["observation_data:28","weather_data_qc:28","flash_data:28"];
        caches = ["spatialite_common_cache:observation_data,weather_data_qc,flash_data"];
        active = true;
    },
    {
        name   = "postgresql_mobile_observations";        // Driver name
        tables = ["ext_obsdata"];                       // List of tables
        caches = [];                                    // List of cache items: empty list -> no cache used
        active = true;
    },
    {
      // Observations older than 28 days are fetched from master database
      // Cache is updated from master database. WQC is in PG only after 1.7.2020
      // Meta-plugin observable property query uses measurand-table
        name = "postgresql_master_fmi_observations";
        tables = ["observation_data","weather_data_qc:800","measurand","flash_data"];
        caches = [];
        active = true;
    },
    { // Magnetometer observations
        name = "postgresql_magnetometer_fmi_observations";
        tables = ["magnetometer_data"];
        caches = [];
        active = true;
    }
);

@include "observation/stationtypes.conf"
@include "observation/metadata.conf"
@include "observation/parameters.conf"
