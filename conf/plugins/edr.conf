observation_disabled  = true;
aviengine_disabled  = true;


# Obligatory localization parameters:

language	    = "fi";
locale		    = "fi_FI";

url		    = "/edr";
timeformat	    = "iso";
obsengine_disabled  = true;
# If this is true observation engine does not execute database queries, only cache is used
prevent_observation_database_query = true;

# The forecast source (querydata/grid) that handles queries that do not contain producer information
primaryForecastSource = "grid";
gridengine_disabled   = false;
# parameterAliasFiles = ["/home/reponen/work/smartmet/plugins/timeseries/cnf/timeseries_alias.cfg"];

# expiration time in seconds, zero disables caching
expires	= 60;

# maximum distance for observations and point forecasts unless overridden by qengine.conf (not relevant for grids)
maxdistance	= 60.0;

metadata_updates_disabled = false;
metadata_update_interval = 30;

# Default interval for observations in hours
# observation_period = 24;

request_limits:
{
        maxlocations = 0;
        maxparameters = 0;
        maxtimes = 0;
        maxlevels = 0;
        maxelements = 0;  # locations * parameters * times * levels
};

cache =
{
        memory_bytes            = 1073741824L;	# 1 GB
        filesystem_bytes        = 0L;		# 2 GB
        timeseries_size		= 10000L;
};

wxml:
{
	timestring	= "%Y-%b-%dT%H:%M:%S";
	version		= "2.00";
	schema		= "http://services.weatherproof.fi http://services.weatherproof.fi/schemas/pointweather_{version}.xsd";
};

xml:
{
	tag	= "areaforecast";
};

# Supported data queries
data_queries:
{
    default = ["position","radius","area","cube","locations","trajectory","corridor"];
    override:
    {
        METAR = ["locations","corridor","area","position","radius"];
        TAF = ["locations","corridor","area","position","radius"];
        SIGMET = ["locations","corridor","area","position","radius"];
    };
};

# Supported output formats
output_formats:
{
    default = ["CoverageJSON","GeoJSON"];
    override:
    {
        METAR = ["CoverageJSON","GeoJSON","IWXXM","TAC"];
        SIGMET = ["CoverageJSON","GeoJSON","IWXXM","TAC"];
        TAF = ["CoverageJSON","GeoJSON","IWXXM","TAC"];
    };
};

# Collections visible to all. Note! if entry not defined show all collections. Empty array disables all.
visible_collections:
{
        # querydata_engine = ["*"];
        #observation_engine = [];
        # avi_engine = [];
        grid_engine = ["*"];
};

function_settings:
{
	sliding:
	{
	// by default sliding mode is used for all functions
		default = true;
#		min = false;
	};

	interval = 0; // zero means interval is equal to result set size
};

parameter_info:
{
    temperature:
    {
	description:
	{
	    en = "Air temperature";
	    fi = "Ilman lämpötila";
	};
	unit:
	{
	    label:
	    {
		en = "Celsius";
		fi = "Celsius";
	    };
	    symbol:
	    {
		value = "˚C";
		type = "http://codes.wmo.int/common/unit/_degC";
	    };
	};
    };
};

# AVI
api:
{
	items:
	(
		{
			url = "/edr";
			template = "home.json";
		},
		{
			url = "/edr/api";
			template = "api.json";
		},
		{
			url = "/edr/conformance";
			template = "conformance.json";
		}
	)
};


// display precision for variables
// note: g++ (GCC) 4.1.2 20071124 (Red Hat 4.1.2-42)
// seems to have a bug in copying maps in maps.
// Define atleast one variable besides "default"
// to make sure the map of precisions is not empty.

precision:
{
	// default is the first one listed

	enabled = ["auto","normal","double","full"];
	    // The automagic uses precision from data
    	    auto:
    	    {	       
            	       default: -1;
    	    };


	// normal output mode for meteograms & tables
	normal:
	{
		default			= 0;

		Precipitation1h		= 1;
		SigWaveHeight		= 1;
		CorrectedReflectivity	= 1;
		TotalPrecipitationF0	= 1;
		TotalPrecipitationF10	= 1;
		TotalPrecipitationF25	= 1;
		TotalPrecipitationF50	= 1;
		TotalPrecipitationF75	= 1;
		TotalPrecipitationF90	= 1;
		TotalPrecipitationF100	= 1;
		PrecipitationRate	= 2;

		stationlatitude		= 5;
		stationlat		= 5;
		stationlongitude	= 5;
		stationlon		= 5;
		latitude		= 5;
		longitude		= 5;
		lon			= 5;
		lat			= 5;
		latlon			= 5;
		lonlat			= 5;
		nearlatitude		= 5;
		nearlongitude		= 5;
		nearlatlon		= 5;
		nearlonlat		= 5;
		direction		= 1;
		distance		= 1;
		elevation		= 1;
		sunelevation		= 1;
		sundeclination		= 1;
		sunazimuth		= 1;
		moonphase		= 1;
		wsp_pt1s_avg		= 1;
		wdp_pt1s_avg		= 0;
		rhp_pt1s_avg		= 1;
		tdp_pt1s_avg		= 1;
		tap_pt1s_avg		= 1;
		uep_pt1s_avg		= 1;
		uap_pt1s_avg		= 1;
		level_no		= 0;
		level_status		= 0;
		level_time		= 0;
		level_altitude		= 0;
		level_pressure		= 1;
		level_longitude		= 5;
		level_latitude		= 5;
		sounding_type		= 0;
	};

	// double precision for graphs
	double:
	{
		default			= 1;

		PrecipitationForm	= 0;
		PrecipitationType	= 0;
		WeatherSymbol1		= 0;
		WeatherSymbol3		= 0;

		CorrectedReflectivity	= 2;
		TotalPrecipitationF0	= 2;
		TotalPrecipitationF10	= 2;
		TotalPrecipitationF25	= 2;
		TotalPrecipitationF50	= 2;
		TotalPrecipitationF75	= 2;
		TotalPrecipitationF90	= 2;
		TotalPrecipitationF100	= 2;
		PrecipitationRate	= 4;

		stationlatitude		= 7;
		stationlat		= 7;
		stationlongitude	= 7;
		stationlon		= 7;
		latitude		= 7;
		longitude		= 7;
		lon			= 7;
		lat			= 7;
		latlon			= 7;
		lonlat			= 7;
		nearlatitude		= 7;
		nearlongitude		= 7;
		nearlatlon		= 7;
		nearlonlat		= 7;
		direction		= 2;
		distance		= 2;
		elevation		= 2;
		sunelevation		= 2;
		sundeclination		= 2;
		sunazimuth		= 2;
		moonphase		= 2;
		wsp_pt1s_avg		= 1;
		wdp_pt1s_avg		= 0;
		rhp_pt1s_avg		= 1;
		tdp_pt1s_avg		= 3;
		tap_pt1s_avg		= 3;
		uep_pt1s_avg		= 3;
		uap_pt1s_avg		= 3;
		level_no		= 0;
		level_status		= 0;
		level_time		= 0;
		level_altitude		= 0;
		level_pressure		= 1;
		level_longitude		= 7;
		level_latitude		= 7;
		sounding_type		= 0;
	};

	// full precision for math etc
	full:
	{
		default			= -1;
	};
};


# PostGIS database definitions
geometry_tables:
{
	# Default values for server, schema, table, field
	server	= ""; // Default server in gis-engine configuration
	# Default geometry source: Suomen kunnat
	schema	= "fminames";
	table	= "kunnat";
	field	= "kuntanimi";

# 	additional_tables:
# 	(
# 		{
# 			# Default values of server and schema can be overwritten here if needed
# 			table	= "maakunnat";
# 			field 	= "maaknimi";	
# 		},
# 		{
# 			# Default values of server and schema can be overwritten here if needed
# 			name    = "MAAKUNNAT";
# 			table	= "maakunnat";
# 			field 	= "maaknimi";	
# 		},
# 		{
# 			schema  = "tiehallinto";
#                 	table   = "valtatiet";
#                 	field   = "tie";        
#         	},
# #		{
# #			schema	= "esri";
# #			table	= "europe_cities_eureffin";
# #			field	= "name";	
# #		},
# 		{
# 			schema	= "esri";
# 			table	= "europe_mjroads_eureffin";
# 			field	= "intlcode2";	
# 		},
# 		{
# 			schema	= "esri";
# 			table	= "europe_country_wgs84";
# 			field	= "cntryname";	
# 		},
# 		{
# 			name    = "EUROOPAN_MAAT";
# 			schema	= "esri";
# 			table	= "europe_country_wgs84";
# 			field	= "cntryname";	
# 		},
# 		{
# 			table	= "alueet";
# 			field	= "code";
# 		},
# 	        {
# 	                schema = "customer_data",
# 	                table  = "merialueet",        
# 	                field  = "areacode",
# 	        },
# 	        {
# 	                schema = "customer_data",
# 	                table  = "merivaroitusalueet",        
# 	                field  = "areacode",
# 	        },
# 	        {
# 	                schema = "customer_data",
# 	                table  = "swc_merialueet",        
# 	                field  = "area",
# 	        },
# 	        {
# 	                schema = "customer_data",
# 	                table  = "palolentoreitit",
# 	                field  = "area",
# 	        },
# 	        {
# 			name    = "PALO_VANHA";
# 	                schema = "customer_data",
# 	                table  = "palolentoreitit_2019",
# 	                field  = "area",
# 	        }
#		{
#			schema  = "natural_earth";
#			table   = "world_populated_places";
#			field   = "name";       
#        	}

};

collection_info:
{
	grid_engine:
	(
    {
			id = "SMARTMET";
			title = "SMARTMET Forecast";
			description = "SMARTMET Forecast";
			keywords = ["SMARTMET"];
		},
    {
			id = "SMARTMETMTA";
			title = "SMARTMETMTA Forecast";
			description = "Postprosessed firlds for SMARTMET Forecast";
			keywords = ["SMARTMETMTA"];
		},
	)
	# observation_engine:
	# (
	# 	{
	# 		id = "airquality";
	# 		title = "Title for collection airquality";
	# 		description = "Description for collection airquality";
	# 		keywords = ["airquality"];
	# 	},
	# 	{
	# 		id = "airquality_daily_fmi";
	# 		title = "Title for collection airquality_daily_fmi";
	# 		description = "Description for collection airquality_daily_fmi";
	# 		keywords = ["airquality_daily_fmi"];
	# 	},
	# 	{
	# 		id = "airquality_daily_urban";
	# 		title = "Title for collection airquality_daily_urban";
	# 		description = "Description for collection airquality_daily_urban";
	# 		keywords = ["airquality_daily_urban"];
	# 	},
	# 	{
	# 		id = "airquality_fmi";
	# 		title = "Title for collection airquality_fmi";
	# 		description = "Description for collection airquality_fmi";
	# 		keywords = ["airquality_fmi"];
	# 	},
	# 	{
	# 		id = "airquality_urban";
	# 		title = "Title for collection airquality_urban";
	# 		description = "Description for collection airquality_urban";
	# 		keywords = ["airquality_urban"];
	# 	},
	# 	{
	# 		id = "buoy";
	# 		title = "Title for collection buoy";
	# 		description = "Description for collection buoy";
	# 		keywords = ["buoy"];
	# 	},
	# 	{
	# 		id = "daily";
	# 		title = "Title for collection daily";
	# 		description = "Description for collection daily";
	# 		keywords = ["daily"];
	# 	},
	# 	{
	# 		id = "elering";
	# 		title = "Title for collection elering";
	# 		description = "Description for collection elering";
	# 		keywords = ["elering"];
	# 	},
	# 	{
	# 		id = "external_radiation";
	# 		title = "Title for collection external_radiation";
	# 		description = "Description for collection external_radiation";
	# 		keywords = ["external_radiation"];
	# 	},
	# 	{
	# 		id = "flash";
	# 		title = "Title for collection flash";
	# 		description = "Description for collection flash";
	# 		keywords = ["flash"];
	# 	},
	# 	{
	# 		id = "fmi";
	# 		title = "Title for collection fmi";
	# 		description = "Description for collection fmi";
	# 		keywords = ["fmi"];
	# 	},
	# 	{
	# 		id = "fmi_iot";
	# 		title = "Title for collection fmi_iot";
	# 		description = "Description for collection fmi_iot";
	# 		keywords = ["fmi_iot"];
	# 	},
	# 	{
	# 		id = "foreign";
	# 		title = "Title for collection foreign";
	# 		description = "Description for collection foreign";
	# 		keywords = ["foreign"];
	# 	},
	# 	{
	# 		id = "hourly";
	# 		title = "Title for collection hourly";
	# 		description = "Description for collection hourly";
	# 		keywords = ["hourly"];
	# 	},
	# 	{
	# 		id = "lammitystarve";
	# 		title = "Title for collection lammitystarve";
	# 		description = "Description for collection lammitystarve";
	# 		keywords = ["lammitystarve"];
	# 	},
	# 	{
	# 		id = "magneto";
	# 		title = "Title for collection magneto";
	# 		description = "Description for collection magneto";
	# 		keywords = ["magneto"];
	# 	},
	# 	{
	# 		id = "mareograph";
	# 		title = "Title for collection mareograph";
	# 		description = "Description for collection mareograph";
	# 		keywords = ["mareograph"];
	# 	},
	# 	{
	# 		id = "mast";
	# 		title = "Title for collection mast";
	# 		description = "Description for collection mast";
	# 		keywords = ["mast"];
	# 	},
	# 	{
	# 		id = "meripalvelut";
	# 		title = "Title for collection meripalvelut";
	# 		description = "Description for collection meripalvelut";
	# 		keywords = ["meripalvelut"];
	# 	},
	# 	{
	# 		id = "minute_rad";
	# 		title = "Title for collection minute_rad";
	# 		description = "Description for collection minute_rad";
	# 		keywords = ["minute_rad"];
	# 	},
	# 	{
	# 		id = "monthly_grid";
	# 		title = "Title for collection monthly_grid";
	# 		description = "Description for collection monthly_grid";
	# 		keywords = ["monthly_grid"];
	# 	},
	# 	{
	# 		id = "netatmo";
	# 		title = "Title for collection netatmo";
	# 		description = "Description for collection netatmo";
	# 		keywords = ["netatmo"];
	# 	},
	# 	{
	# 		id = "observations_fmi";
	# 		title = "Title for collection observations_fmi";
	# 		description = "Description for collection observations_fmi";
	# 		keywords = ["observations_fmi"];
	# 	},
	# 	{
	# 		id = "observations_fmi_extaws";
	# 		title = "Title for collection observations_fmi_extaws";
	# 		description = "Description for collection observations_fmi_extaws";
	# 		keywords = ["observations_fmi_extaws"];
	# 	},
	# 	{
	# 		id = "observations_fmi_extaws_clim";
	# 		title = "Title for collection observations_fmi_extaws_clim";
	# 		description = "Description for collection observations_fmi_extaws_clim";
	# 		keywords = ["observations_fmi_extaws_clim"];
	# 	},
	# 	{
	# 		id = "opendata";
	# 		title = "Title for collection opendata";
	# 		description = "Description for collection opendata";
	# 		keywords = ["opendata"];
	# 	},
	# 	{
	# 		id = "opendata_buoy";
	# 		title = "Title for collection opendata_buoy";
	# 		description = "Description for collection opendata_buoy";
	# 		keywords = ["opendata_buoy"];
	# 	},
	# 	{
	# 		id = "opendata_daily";
	# 		title = "Title for collection opendata_daily";
	# 		description = "Description for collection opendata_daily";
	# 		keywords = ["opendata_daily"];
	# 	},
	# 	{
	# 		id = "opendata_mareograph";
	# 		title = "Title for collection opendata_mareograph";
	# 		description = "Description for collection opendata_mareograph";
	# 		keywords = ["opendata_mareograph"];
	# 	},
	# 	{
	# 		id = "opendata_minute";
	# 		title = "Title for collection opendata_minute";
	# 		description = "Description for collection opendata_minute";
	# 		keywords = ["opendata_minute"];
	# 	},
	# 	{
	# 		id = "opendata_sea";
	# 		title = "Title for collection opendata_sea";
	# 		description = "Description for collection opendata_sea";
	# 		keywords = ["opendata_sea"];
	# 	},
	# 	{
	# 		id = "radionuclides";
	# 		title = "Title for collection radionuclides";
	# 		description = "Description for collection radionuclides";
	# 		keywords = ["radionuclides"];
	# 	},
	# 	{
	# 		id = "research";
	# 		title = "Title for collection research";
	# 		description = "Description for collection research";
	# 		keywords = ["research"];
	# 	},
	# 	{
	# 		id = "road";
	# 		title = "Title for collection road";
	# 		description = "Description for collection road";
	# 		keywords = ["road"];
	# 	},
	# 	{
	# 		id = "roadcloud";
	# 		title = "Title for collection roadcloud";
	# 		description = "Description for collection roadcloud";
	# 		keywords = ["roadcloud"];
	# 	},
	# 	{
	# 		id = "sea";
	# 		title = "Title for collection sea";
	# 		description = "Description for collection sea";
	# 		keywords = ["sea"];
	# 	},
	# 	{
	# 		id = "solar";
	# 		title = "Title for collection solar";
	# 		description = "Description for collection solar";
	# 		keywords = ["solar"];
	# 	},
	# 	{
	# 		id = "sounding";
	# 		title = "Title for collection sounding";
	# 		description = "Description for collection sounding";
	# 		keywords = ["sounding"];
	# 	},
	# 	{
	# 		id = "syke";
	# 		title = "Title for collection syke";
	# 		description = "Description for collection syke";
	# 		keywords = ["syke"];
	# 	},
	# 	{
	# 		id = "teconer";
	# 		title = "Title for collection teconer";
	# 		description = "Description for collection teconer";
	# 		keywords = ["teconer"];
	# 	}
	# )
}
